namespace Test {
        var x: int = 42;
        const y: float = 3.14;

        fn foo() {
                print "bar";
        }

        struct Bar {
                x: int;
                y: int;
        };
        namespace Other {
                struct Bar {
                        x: int;
                        y: int;

                        fn describe() {
                                print self.x;
                                print self.y;
                        }

                        fn add() -> int {
                                return self.x + self.y;
                        }
                };
        }

        var t: Other::Bar = Other::Bar {
                x = 10,
                y = 20
        };

        var u: Other::Bar = Other::Bar {
                x = 30,
                y = 90
        };

        var z: Other::Bar[] = [ t, u ];
}

print Test::x;
print Test::y;

Test::foo();

var p: Test::Bar = Test::Bar {
        x = 1,
        y = 2
};

var o: Test::Other::Bar = Test::Other::Bar {
        x = 1,
        y = 2
};

print p.x;
print p.y;

print o.x;
print o.y;


Test::t.describe();

print "arr[0]";
Test::z[0].describe();
print Test::z[0].add();
print "arr[1]";
Test::z[1].describe();
print Test::z[1].add();